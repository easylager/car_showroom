Index: car_showroom/config/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\nDjango settings for config project.\n\nGenerated by 'django-admin startproject' using Django 4.0.2.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.0/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/4.0/ref/settings/\n\"\"\"\n\nfrom pathlib import Path\nimport os\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\n#SECRET_KEY = 'django-insecure-#8k)3mqwk)rlhycf7b%!4w6(7k+(4&t@hc#(8$4bc5wb09x2hl'\nSECRET_KEY = os.environ.get(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\n\n#DEBUG = int(os.environ.get(\"DEBUG\", default=0))\n\nDEBUG = True\n\nALLOWED_HOSTS = os.environ.get(\"DJANGO_ALLOWED_HOSTS\").split(\" \")\n#ALLOWED_HOSTS = ['0.0.0.0']\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'car',\n    'customer',\n    'showroom',\n    'supplier',\n    'core',\n    'django_countries',\n    'rest_framework',\n    'debug_toolbar',\n    'rest_framework_simplejwt'\n\n\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'debug_toolbar.middleware.DebugToolbarMiddleware'\n]\n\nROOT_URLCONF = 'config.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'config.wsgi.application'\n\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\n\n\n\nDATABASES = {\n    'default': {\n        'ENGINE': os.environ.get('POSTGRES_ENGINE'),\n        'NAME': os.environ.get('POSTGRES_DB'),\n        'USER': os.environ.get('POSTGRES_USER'),\n        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),\n        'HOST': os.environ.get('POSTGRES_HOST'),\n        'PORT': os.environ.get('POSTGRES_PORT'),\n    }\n}\n\n\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    )\n}\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n\nif DEBUG:\n    import os  # only if you haven't already imported this\n    import socket  # only if you haven't already imported this\n    hostname, _, ips = socket.gethostbyname_ex(socket.gethostname())\n    INTERNAL_IPS = [ip[:-1] + '1' for ip in ips] + ['127.0.0.1', '10.0.2.2']
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/car_showroom/config/settings.py b/car_showroom/config/settings.py
--- a/car_showroom/config/settings.py	
+++ b/car_showroom/config/settings.py	
@@ -47,7 +47,9 @@
     'django_countries',
     'rest_framework',
     'debug_toolbar',
-    'rest_framework_simplejwt'
+    'rest_framework_simplejwt',
+    'drf_yasg',
+    'django_filters',
 
 
 ]
@@ -123,8 +125,12 @@
 REST_FRAMEWORK = {
     'DEFAULT_AUTHENTICATION_CLASSES': (
         'rest_framework_simplejwt.authentication.JWTAuthentication',
-    )
-}
+    ),
+    #'DEFAULT_FILTER_BACKENDS': (
+            #'django_filters.rest_framework.DjangoFilterBackend'
+    #)
+
+                 }
 
 # Internationalization
 # https://docs.djangoproject.com/en/4.0/topics/i18n/
Index: car_showroom/config/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\nfrom django.contrib import admin\nfrom django.urls import path, include\nfrom rest_framework_simplejwt.views import (\n    TokenObtainPairView,\n    TokenRefreshView,\n)\n\nurlpatterns = [\n\n    path('admin/', admin.site.urls),\n    path('api/token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('api/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n    path(r'', include('supplier.urls')),\n    path(r'', include('car.urls')),\n    path(r'', include('showroom.urls')),\n    path(r'', include('customer.urls')),\n    path('__debug__/', include('debug_toolbar.urls'))\n]\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/car_showroom/config/urls.py b/car_showroom/config/urls.py
--- a/car_showroom/config/urls.py	
+++ b/car_showroom/config/urls.py	
@@ -5,6 +5,7 @@
     TokenObtainPairView,
     TokenRefreshView,
 )
+from .yasg import urlpatterns as doc_urls
 
 urlpatterns = [
 
@@ -17,3 +18,6 @@
     path(r'', include('customer.urls')),
     path('__debug__/', include('debug_toolbar.urls'))
 ]
+
+
+urlpatterns += doc_urls
Index: car_showroom/car/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render\nfrom car.serializers import CarManufacturerSerializer, CarSerializer, CarCreateSerializer\nfrom car.models import Car, CarManufacturer\nfrom rest_framework import viewsets, mixins\n\n\nclass CarManufacturerViewSet(\n                mixins.ListModelMixin,\n                mixins.CreateModelMixin,\n                mixins.UpdateModelMixin,\n                mixins.RetrieveModelMixin,\n                viewsets.GenericViewSet, ):\n    serializer_class = CarManufacturerSerializer\n    queryset = CarManufacturer.objects.all()\n\n\nclass CarViewSet(\n                mixins.ListModelMixin,\n                mixins.CreateModelMixin,\n                mixins.UpdateModelMixin,\n                mixins.RetrieveModelMixin,\n                viewsets.GenericViewSet,\n                ):\n    default_serializer_class = CarSerializer\n    serializers = {\n        'create': CarCreateSerializer\n    }\n\n    def get_serializer_class(self):\n        return self.serializers.get(self.action, self.default_serializer_class)\n\n    queryset = Car.objects.select_related('manufacturer').all()\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/car_showroom/car/views.py b/car_showroom/car/views.py
--- a/car_showroom/car/views.py	
+++ b/car_showroom/car/views.py	
@@ -2,6 +2,8 @@
 from car.serializers import CarManufacturerSerializer, CarSerializer, CarCreateSerializer
 from car.models import Car, CarManufacturer
 from rest_framework import viewsets, mixins
+from django_filters.rest_framework import DjangoFilterBackend
+from car.services import CarFilter
 
 
 class CarManufacturerViewSet(
@@ -22,6 +24,8 @@
                 viewsets.GenericViewSet,
                 ):
     default_serializer_class = CarSerializer
+    filter_backends = (DjangoFilterBackend,)
+    filterset_class = CarFilter
     serializers = {
         'create': CarCreateSerializer
     }
Index: car_showroom/requirements.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>asgiref==3.5.0\nbackports.zoneinfo==0.2.1\nDjango==4.0.2\npsycopg2-binary==2.9.3\ndjango-countries==7.2.1\ndjango-filter==21.1\ndjangorestframework==3.13.1\nimportlib-metadata==4.11.2\nMarkdown==3.3.6\npytz==2021.3\npyuca==1.2\nsqlparse==0.4.2\ntzdata==2021.5\nzipp==3.7.0\ndjango-debug-toolbar\ndjangorestframework-simplejwt==5.1.0\n\n\n\n\n\n
===================================================================
diff --git a/car_showroom/requirements.txt b/car_showroom/requirements.txt
--- a/car_showroom/requirements.txt	
+++ b/car_showroom/requirements.txt	
@@ -14,6 +14,7 @@
 zipp==3.7.0
 django-debug-toolbar
 djangorestframework-simplejwt==5.1.0
+drf-yasg==1.20.0
 
 
 
