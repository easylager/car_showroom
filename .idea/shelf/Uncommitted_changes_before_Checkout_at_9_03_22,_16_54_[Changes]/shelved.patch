Index: car_showroom/config/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\nDjango settings for config project.\n\nGenerated by 'django-admin startproject' using Django 4.0.2.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.0/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/4.0/ref/settings/\n\"\"\"\n\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-#8k)3mqwk)rlhycf7b%!4w6(7k+(4&t@hc#(8$4bc5wb09x2hl'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'car',\n    'customer',\n    'showroom',\n    'supplier',\n    'core',\n    'django_countries'\n\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'config.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'config.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/car_showroom/config/settings.py b/car_showroom/config/settings.py
--- a/car_showroom/config/settings.py	
+++ b/car_showroom/config/settings.py	
@@ -42,7 +42,8 @@
     'showroom',
     'supplier',
     'core',
-    'django_countries'
+    'django_countries',
+
 
 ]
 
Index: car_showroom/car/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\n\n\nclass CarManufacturer(models.Model):\n    name = models.CharField(max_length=100, unique=True)\n\n    def __str__(self):\n        return self.name\n\n\nclass Car(models.Model):\n    CAR_TYPE_CHOICES = [\n        ('Sedan', 'Sedan'),\n        ('Coupe', 'Coupe'),\n        ('Crossover', 'Crossover')\n    ]\n    manufacturer = models.ForeignKey(CarManufacturer, on_delete=models.CASCADE)\n    car_type = models.CharField(max_length=100, choices=CAR_TYPE_CHOICES)\n    model = models.CharField(max_length=100, unique=True)\n    description = models.CharField(max_length=200, null=True)\n    features = models.JSONField()\n\n    def __str__(self):\n        return f'{self.manufacturer}{self.model}'\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/car_showroom/car/models.py b/car_showroom/car/models.py
--- a/car_showroom/car/models.py	
+++ b/car_showroom/car/models.py	
@@ -1,3 +1,5 @@
+from django_enumfield import enum
+
 from django.db import models
 
 
@@ -8,14 +10,23 @@
         return self.name
 
 
+class CarType(enum.Enum):
+     Sedan = 0
+     Coupe = 1
+     Crossover = 2
+     Hatchback = 3
+
+
+
 class Car(models.Model):
-    CAR_TYPE_CHOICES = [
-        ('Sedan', 'Sedan'),
-        ('Coupe', 'Coupe'),
-        ('Crossover', 'Crossover')
-    ]
+    #CAR_TYPE_CHOICES = [
+        #('Sedan', 'Sedan'),
+        #('Coupe', 'Coupe'),
+       # ('Crossover', 'Crossover')
+    #
     manufacturer = models.ForeignKey(CarManufacturer, on_delete=models.CASCADE)
-    car_type = models.CharField(max_length=100, choices=CAR_TYPE_CHOICES)
+    #car_type = models.CharField(max_length=100, choices=CAR_TYPE_CHOICES)
+    car_type = enum.EnumField(CarType, default='Sedan')
     model = models.CharField(max_length=100, unique=True)
     description = models.CharField(max_length=200, null=True)
     features = models.JSONField()
